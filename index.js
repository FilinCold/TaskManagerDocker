const express = require("express");
const cron = require("node-cron");

const { ENV } = require("./src/config/env");
const { JWT } = require("google-auth-library");
const { GoogleSpreadsheet } = require("google-spreadsheet");
const { ID_TABLE, NUMBER_SHEETS } = require("./src/constants");
const { processMatchingChangeBudget } = require("./src/utils");
const { Puppeter } = require("./src/service/Puppeter");
const app = express();

const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: ENV.EMAIL,
  key: ENV.PASSWORD,
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});

const doc = new GoogleSpreadsheet(ID_TABLE, serviceAccountAuth);
const port = process.env.PORT || 3001;

app.get("/", (req, res) => {
  res.send("Parser work").status(200);
});

app.listen(port, async () => {
  console.log(`Server listening on port ${port}`);

  try {
    await doc.loadInfo();

    cron.schedule("30 * * * *", async () => {
      console.log("running a task every hour in 30 min for test");
    });

    const promise1 = await processMatchingChangeBudget(
      NUMBER_SHEETS.FIRST_SHEET,
      doc
    );
    const promise2 = await processMatchingChangeBudget(
      NUMBER_SHEETS.SECOND_SHEET,
      doc
    );

    Promise.all([promise1, promise2]).catch((e) =>
      console.log("Which promise with error", e)
    );
  } catch (error) {
    console.log(error);
  }
});
